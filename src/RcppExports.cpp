// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// auto_flatten
void auto_flatten(const std::string& inputPath, int nCones, bool flattenToDisk, bool mapToSphere, bool normalizeUVs, const std::string& outputPath);
RcppExport SEXP _rbff_auto_flatten(SEXP inputPathSEXP, SEXP nConesSEXP, SEXP flattenToDiskSEXP, SEXP mapToSphereSEXP, SEXP normalizeUVsSEXP, SEXP outputPathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type inputPath(inputPathSEXP);
    Rcpp::traits::input_parameter< int >::type nCones(nConesSEXP);
    Rcpp::traits::input_parameter< bool >::type flattenToDisk(flattenToDiskSEXP);
    Rcpp::traits::input_parameter< bool >::type mapToSphere(mapToSphereSEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeUVs(normalizeUVsSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type outputPath(outputPathSEXP);
    auto_flatten(inputPath, nCones, flattenToDisk, mapToSphere, normalizeUVs, outputPath);
    return R_NilValue;
END_RCPP
}
// flatten_to_shape
void flatten_to_shape(const std::string& inputPath, NumericMatrix boundary_shape, bool normalizeUVs, const std::string& outputPath);
RcppExport SEXP _rbff_flatten_to_shape(SEXP inputPathSEXP, SEXP boundary_shapeSEXP, SEXP normalizeUVsSEXP, SEXP outputPathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type inputPath(inputPathSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boundary_shape(boundary_shapeSEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeUVs(normalizeUVsSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type outputPath(outputPathSEXP);
    flatten_to_shape(inputPath, boundary_shape, normalizeUVs, outputPath);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rbff_auto_flatten", (DL_FUNC) &_rbff_auto_flatten, 6},
    {"_rbff_flatten_to_shape", (DL_FUNC) &_rbff_flatten_to_shape, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_rbff(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
