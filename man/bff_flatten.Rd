% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flatten.R
\name{bff_flatten}
\alias{bff_flatten}
\title{Automatically flatten a 3d mesh using boundary first flattening}
\usage{
bff_flatten(
  mesh,
  n_cones = 0,
  to_disk = FALSE,
  to_sphere = FALSE,
  normalise = TRUE
)
}
\arguments{
\item{mesh}{\code{mesh3d} object to flatten}

\item{n_cones}{Number of cone singularities to insert into mesh to reduce distortion. Ignored
if \code{to_disk = TRUE}}

\item{to_disk}{Should the mesh be flattened to a disk?}

\item{to_sphere}{Should the mesh be mapped to a sphere instead (only works with closed objects).}

\item{normalise}{Should the 2d mapping be normalised between 0 and 1 on the x and y axes?}
}
\value{
A \code{bff_flattened} object containing the original mesh and its flattened version with
corresponding vertices unless \code{to_sphere = TRUE}, in which case a \code{bff_sphered} object is returned.
}
\description{
Flattening will only work with closed objects if cones are inserted (cuts or seams).
Closed objects can instead be mapped to a sphere however.
If both \code{to_disk} and \code{to_sphere} are \code{FALSE}, a target boundary shape will be determined
automatically that minimized area and angle distortion. If you want to
flatten to a particular target boundary shape, use \code{\link[=bff_flatten_to_shape]{bff_flatten_to_shape()}}
}
\examples{
data(face)
options(rgl.useNULL = TRUE)
flat_face <- bff_flatten(face)
}
